# Generated by Django 5.1.1 on 2025-10-29 08:51

from decimal import Decimal

from django.db import migrations


PACK_CONFIGS = [
    {
        "name": "Basic Pack",
        "slug": "basic-pack",
        "description": "Good for starting your collection",
        "price": 20,
        "rarities": {
            "common": Decimal("89.89"),
            "rare": Decimal("10"),
            "epic": Decimal("0.10"),
            "legendary": Decimal("0.01"),
        },
    },
    {
        "name": "Standard Pack",
        "slug": "standard-pack",
        "description": "Higher chance of Rare cards",
        "price": 50,
        "rarities": {
            "common": Decimal("79.45"),
            "rare": Decimal("20"),
            "epic": Decimal("0.50"),
            "legendary": Decimal("0.05"),
        },
    },
    {
        "name": "Premium Pack",
        "slug": "premium-pack",
        "description": "Good chances for Epic and Rare cards",
        "price": 150,
        "rarities": {
            "common": Decimal("57.80"),
            "rare": Decimal("40"),
            "epic": Decimal("2.00"),
            "legendary": Decimal("0.20"),
        },
    },
    {
        "name": "Elite Pack",
        "slug": "elite-pack",
        "description": "Excellent chances of Epic, maybe Legendary",
        "price": 400,
        "rarities": {
            "common": Decimal("31.20"),
            "rare": Decimal("60"),
            "epic": Decimal("8.00"),
            "legendary": Decimal("0.80"),
        },
    },
    {
        "name": "Mythic Pack",
        "slug": "mythic-pack",
        "description": "High chance of Legendary cards",
        "price": 1200,
        "rarities": {
            "common": Decimal("20.00"),
            "rare": Decimal("60"),
            "epic": Decimal("17.00"),
            "legendary": Decimal("3.00"),
        },
    },
]


def create_packs(apps, schema_editor):
    Pack = apps.get_model("packs", "Pack")
    PackRarityWeight = apps.get_model("packs", "PackRarityWeight")
    CardRarity = apps.get_model("cards", "CardRarity")

    for config in PACK_CONFIGS:
        pack, _ = Pack.objects.update_or_create(
            slug=config["slug"],
            defaults={
                "name": config["name"],
                "description": config["description"],
                "price": config["price"],
                "cards_per_pack": 5,
                "is_active": True,
            },
        )
        for rarity_name, weight in config["rarities"].items():
            rarity, _ = CardRarity.objects.get_or_create(name=rarity_name)
            PackRarityWeight.objects.update_or_create(
                pack=pack,
                rarity=rarity,
                defaults={"weight": weight},
            )


def remove_packs(apps, schema_editor):
    Pack = apps.get_model("packs", "Pack")
    Pack.objects.filter(slug__in=[cfg["slug"] for cfg in PACK_CONFIGS]).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('packs', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_packs, remove_packs),
    ]
